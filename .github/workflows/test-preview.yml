name: Test and Preview
on:
  pull_request:
    types: [opened, synchronize, edited, ready_for_review]
    paths:
        - bikespace_api/**
        - bikespace_frontend/**
jobs:
  apitest:
    name: API tests
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version : '3.12.0'
      - name: Setup app database
        env:
          PGPASSWORD: postgres
        run: |
          psql -U postgres -h 127.0.0.1 -d postgres -c "CREATE DATABASE bikespace_test"
      - name: Run pytest
        run: make run-pytest
      - name: Coveralls
        uses: coverallsapp/github-action@v2
  test-frontend:
    name: Lint and Test Frontend
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Setup node
          uses: actions/setup-node@v3
          with:
            node-version: "v18.17.0"
        - name: Check code style
          run: make lint-frontend
        - name: Run Jest tests
          run: make test-frontend
  e2e-frontend:
    name: Frontend end-to-end tests
    timeout-minutes: 10
    runs-on: ubuntu-latest
    # # Service containers to run with `container-job`
    # services:
    #   # Label used to access the service container
    #   postgres:
    #     # Docker Hub image
    #     image: postgres
    #     # Provide the password for postgres
    #     env:
    #       POSTGRES_PASSWORD: postgres
    #     # Set health checks to wait until postgres has started
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       - 5432:5432
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    # - name: Setup python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version : '3.12.0'
    # - name: Setup app database
    #   env:
    #     PGPASSWORD: postgres
    #   run: |
    #     psql -U postgres -h 127.0.0.1 -d postgres -c "CREATE DATABASE bikespace_test"
    - name: Run end to end tests
      run: make e2e-frontend
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: bikespace_frontend/playwright-report/
        retention-days: 30
  publish:
    name: Publish to Cloudflare Pages
    needs: [test-frontend, e2e-frontend]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "v18.17.0"
      - name: Build static frontend
        run: make build-frontend
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: bikespace-v2
          directory: bikespace_frontend/out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  