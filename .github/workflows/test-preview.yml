name: Test and Preview
on:
  pull_request:
    types: [opened, synchronize, edited, ready_for_review]
    paths:
        - bikespace_api/**
        - bikespace_frontend/**
jobs:
  apitest:
    name: API tests
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version : '3.12.0'
          cache: 'pip'
          cache-dependency-path: bikespace_api/requirements.txt
      - name: Run pytest
        run: make test-api
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with: 
          fail-on-error: false
  api-migration-test:
    name: Test if database migrations need to be generated for API
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version : '3.12.0'
          cache: 'pip'
          cache-dependency-path: bikespace_api/requirements.txt
      - name: Run migration check
        run: make migrate-test-db
  test-frontend:
    name: Lint and Test Frontend
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Setup node
          uses: actions/setup-node@v4
          with:
            node-version: lts/*
            cache: 'npm'
            cache-dependency-path: bikespace_frontend/package-lock.json
        - name: Check code style
          run: make lint-frontend
        - name: Run Jest tests
          run: make test-frontend
  test-e2e:
    name: Frontend end-to-end tests
    timeout-minutes: 10
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
        cache-dependency-path: bikespace_frontend/package-lock.json
    - name: Run end to end tests
      run: make test-e2e
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: bikespace_frontend/playwright-report/
        retention-days: 30
  publish:
    name: Publish to Cloudflare Pages
    needs: [test-frontend, test-e2e]
    runs-on: ubuntu-latest
    env:
      MAPTILER_API_KEY: ${{ secrets.MAPTILER_API_KEY }}
      DATA_BICYCLE_PARKING: ${{ secrets.DATA_BICYCLE_PARKING }}
      DATA_BICYCLE_NETWORK: ${{ secrets.DATA_BICYCLE_NETWORK }}
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
          cache-dependency-path: bikespace_frontend/package-lock.json
      - name: Build static frontend
        run: make build-frontend
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: bikespace-v2
          directory: bikespace_frontend/out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  